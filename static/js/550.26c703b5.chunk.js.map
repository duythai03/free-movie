{"version":3,"file":"static/js/550.26c703b5.chunk.js","mappings":"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","sources":["../node_modules/@vidstack/react/prod/chunks/vidstack-bT8BlD7X.js"],"sourcesContent":["\"use client\"\n\nimport { listenEvent, effect, untrack, createScope, keysOf, onDispose, DOMEvent, peek } from './vidstack-DcuYVyd0.js';\nimport { ListSymbol, TimeRange, RAFLoop } from './vidstack-Dqbnf1jT.js';\nimport { getCastSessionMedia, getCastContext, getCastSession, hasActiveCastSession, listenCastContextEvent, getCastErrorMessage } from './vidstack-BwLZNdY5.js';\nimport 'react';\nimport '@floating-ui/dom';\n\nclass GoogleCastMediaInfoBuilder {\n  constructor(src) {\n    this.ab = new chrome.cast.media.MediaInfo(src.src, src.type);\n  }\n  build() {\n    return this.ab;\n  }\n  mj(streamType) {\n    if (streamType.includes(\"live\")) {\n      this.ab.streamType = chrome.cast.media.StreamType.LIVE;\n    } else {\n      this.ab.streamType = chrome.cast.media.StreamType.BUFFERED;\n    }\n    return this;\n  }\n  nj(tracks) {\n    this.ab.tracks = tracks.map(this.oj);\n    return this;\n  }\n  pj(title, poster) {\n    this.ab.metadata = new chrome.cast.media.GenericMediaMetadata();\n    this.ab.metadata.title = title;\n    this.ab.metadata.images = [{ url: poster }];\n    return this;\n  }\n  oj(track, trackId) {\n    const castTrack = new chrome.cast.media.Track(trackId, chrome.cast.media.TrackType.TEXT);\n    castTrack.name = track.label;\n    castTrack.trackContentId = track.src;\n    castTrack.trackContentType = \"text/vtt\";\n    castTrack.language = track.language;\n    castTrack.subtype = track.kind.toUpperCase();\n    return castTrack;\n  }\n}\n\nconst REMOTE_TRACK_TEXT_TYPE = chrome.cast.media.TrackType.TEXT, REMOTE_TRACK_AUDIO_TYPE = chrome.cast.media.TrackType.AUDIO;\nclass GoogleCastTracksManager {\n  constructor(_cast, _ctx, _onNewLocalTracks) {\n    this.pd = _cast;\n    this.b = _ctx;\n    this.Be = _onNewLocalTracks;\n  }\n  ie() {\n    const syncRemoteActiveIds = this.vg.bind(this);\n    listenEvent(this.b.audioTracks, \"change\", syncRemoteActiveIds);\n    listenEvent(this.b.textTracks, \"mode-change\", syncRemoteActiveIds);\n    effect(this.qj.bind(this));\n  }\n  od() {\n    return this.b.$state.textTracks().filter((track) => track.src && track.type === \"vtt\");\n  }\n  wg() {\n    return this.b.$state.audioTracks();\n  }\n  yc(type) {\n    const tracks = this.pd.mediaInfo?.tracks ?? [];\n    return type ? tracks.filter((track) => track.type === type) : tracks;\n  }\n  rj() {\n    const activeIds = [], activeLocalAudioTrack = this.wg().find((track) => track.selected), activeLocalTextTracks = this.od().filter(\n      (track) => track.mode === \"showing\"\n    );\n    if (activeLocalAudioTrack) {\n      const remoteAudioTracks = this.yc(REMOTE_TRACK_AUDIO_TYPE), remoteAudioTrack = this.Ae(remoteAudioTracks, activeLocalAudioTrack);\n      if (remoteAudioTrack) activeIds.push(remoteAudioTrack.trackId);\n    }\n    if (activeLocalTextTracks?.length) {\n      const remoteTextTracks = this.yc(REMOTE_TRACK_TEXT_TYPE);\n      if (remoteTextTracks.length) {\n        for (const localTrack of activeLocalTextTracks) {\n          const remoteTextTrack = this.Ae(remoteTextTracks, localTrack);\n          if (remoteTextTrack) activeIds.push(remoteTextTrack.trackId);\n        }\n      }\n    }\n    return activeIds;\n  }\n  qj() {\n    const localTextTracks = this.od();\n    if (!this.pd.isMediaLoaded) return;\n    const remoteTextTracks = this.yc(REMOTE_TRACK_TEXT_TYPE);\n    for (const localTrack of localTextTracks) {\n      const hasRemoteTrack = this.Ae(remoteTextTracks, localTrack);\n      if (!hasRemoteTrack) {\n        untrack(() => this.Be?.());\n        break;\n      }\n    }\n  }\n  sj(event) {\n    if (!this.pd.isMediaLoaded) return;\n    const localAudioTracks = this.wg(), localTextTracks = this.od(), remoteAudioTracks = this.yc(REMOTE_TRACK_AUDIO_TYPE), remoteTextTracks = this.yc(REMOTE_TRACK_TEXT_TYPE);\n    for (const remoteAudioTrack of remoteAudioTracks) {\n      const hasLocalTrack = this.xg(localAudioTracks, remoteAudioTrack);\n      if (hasLocalTrack) continue;\n      const localAudioTrack = {\n        id: remoteAudioTrack.trackId.toString(),\n        label: remoteAudioTrack.name,\n        language: remoteAudioTrack.language,\n        kind: remoteAudioTrack.subtype ?? \"main\",\n        selected: false\n      };\n      this.b.audioTracks[ListSymbol.ea](localAudioTrack, event);\n    }\n    for (const remoteTextTrack of remoteTextTracks) {\n      const hasLocalTrack = this.xg(localTextTracks, remoteTextTrack);\n      if (hasLocalTrack) continue;\n      const localTextTrack = {\n        id: remoteTextTrack.trackId.toString(),\n        src: remoteTextTrack.trackContentId,\n        label: remoteTextTrack.name,\n        language: remoteTextTrack.language,\n        kind: remoteTextTrack.subtype.toLowerCase()\n      };\n      this.b.textTracks.add(localTextTrack, event);\n    }\n  }\n  vg(event) {\n    if (!this.pd.isMediaLoaded) return;\n    const activeIds = this.rj(), editRequest = new chrome.cast.media.EditTracksInfoRequest(activeIds);\n    this.tj(editRequest).catch((error) => {\n    });\n  }\n  tj(request) {\n    const media = getCastSessionMedia();\n    return new Promise((resolve, reject) => media?.editTracksInfo(request, resolve, reject));\n  }\n  xg(localTracks, remoteTrack) {\n    return localTracks.find((localTrack) => this.yg(localTrack, remoteTrack));\n  }\n  Ae(remoteTracks, localTrack) {\n    return remoteTracks.find((remoteTrack) => this.yg(localTrack, remoteTrack));\n  }\n  // Note: we can't rely on id matching because they will differ between local/remote. A local\n  // track id might not even exist.\n  yg(localTrack, remoteTrack) {\n    return remoteTrack.name === localTrack.label && remoteTrack.language === localTrack.language && remoteTrack.subtype.toLowerCase() === localTrack.kind.toLowerCase();\n  }\n}\n\nclass GoogleCastProvider {\n  constructor(_player, _ctx) {\n    this.f = _player;\n    this.b = _ctx;\n    this.$$PROVIDER_TYPE = \"GOOGLE_CAST\";\n    this.scope = createScope();\n    this.L = null;\n    this.Aa = \"disconnected\";\n    this.va = 0;\n    this.ha = 0;\n    this.Ba = new TimeRange(0, 0);\n    this.ga = new RAFLoop(this.lc.bind(this));\n    this.Qa = null;\n    this.Ce = false;\n    this.wa = new GoogleCastTracksManager(\n      this.f,\n      this.b,\n      this.Be.bind(this)\n    );\n  }\n  get c() {\n    return this.b.delegate.c;\n  }\n  get type() {\n    return \"google-cast\";\n  }\n  get currentSrc() {\n    return this.L;\n  }\n  /**\n   * The Google Cast remote player.\n   *\n   * @see {@link https://developers.google.com/cast/docs/reference/web_sender/cast.framework.RemotePlayer}\n   */\n  get player() {\n    return this.f;\n  }\n  /**\n   * @see {@link https://developers.google.com/cast/docs/reference/web_sender/cast.framework.CastContext}\n   */\n  get cast() {\n    return getCastContext();\n  }\n  /**\n   * @see {@link https://developers.google.com/cast/docs/reference/web_sender/cast.framework.CastSession}\n   */\n  get session() {\n    return getCastSession();\n  }\n  /**\n   * @see {@link https://developers.google.com/cast/docs/reference/web_sender/chrome.cast.media.Media}\n   */\n  get media() {\n    return getCastSessionMedia();\n  }\n  /**\n   * Whether the current Google Cast session belongs to this provider.\n   */\n  get hasActiveSession() {\n    return hasActiveCastSession(this.L);\n  }\n  setup() {\n    this.uj();\n    this.vj();\n    this.wa.ie();\n    this.c(\"provider-setup\", this);\n  }\n  uj() {\n    listenCastContextEvent(\n      cast.framework.CastContextEventType.CAST_STATE_CHANGED,\n      this.Ag.bind(this)\n    );\n  }\n  vj() {\n    const Event2 = cast.framework.RemotePlayerEventType, handlers = {\n      [Event2.IS_CONNECTED_CHANGED]: this.Ag,\n      [Event2.IS_MEDIA_LOADED_CHANGED]: this.Bg,\n      [Event2.CAN_CONTROL_VOLUME_CHANGED]: this.Cg,\n      [Event2.CAN_SEEK_CHANGED]: this.Dg,\n      [Event2.DURATION_CHANGED]: this.ee,\n      [Event2.IS_MUTED_CHANGED]: this.Oa,\n      [Event2.VOLUME_LEVEL_CHANGED]: this.Oa,\n      [Event2.IS_PAUSED_CHANGED]: this.wj,\n      [Event2.LIVE_SEEKABLE_RANGE_CHANGED]: this.ob,\n      [Event2.PLAYER_STATE_CHANGED]: this.xj\n    };\n    this.zg = handlers;\n    const handler = this.yj.bind(this);\n    for (const type of keysOf(handlers)) {\n      this.f.controller.addEventListener(type, handler);\n    }\n    onDispose(() => {\n      for (const type of keysOf(handlers)) {\n        this.f.controller.removeEventListener(type, handler);\n      }\n    });\n  }\n  async play() {\n    if (!this.f.isPaused && !this.Ce) return;\n    if (this.Ce) {\n      await this.Eg(false, 0);\n      return;\n    }\n    this.f.controller?.playOrPause();\n  }\n  async pause() {\n    if (this.f.isPaused) return;\n    this.f.controller?.playOrPause();\n  }\n  getMediaStatus(request) {\n    return new Promise((resolve, reject) => {\n      this.media?.getStatus(request, resolve, reject);\n    });\n  }\n  setMuted(muted) {\n    const hasChanged = muted && !this.f.isMuted || !muted && this.f.isMuted;\n    if (hasChanged) this.f.controller?.muteOrUnmute();\n  }\n  setCurrentTime(time) {\n    this.f.currentTime = time;\n    this.c(\"seeking\", time);\n    this.f.controller?.seek();\n  }\n  setVolume(volume) {\n    this.f.volumeLevel = volume;\n    this.f.controller?.setVolumeLevel();\n  }\n  async loadSource(src) {\n    if (this.Qa?.src !== src) this.Qa = null;\n    if (hasActiveCastSession(src)) {\n      this.zj();\n      this.L = src;\n      return;\n    }\n    this.c(\"load-start\");\n    const loadRequest = this.Aj(src), errorCode = await this.session.loadMedia(loadRequest);\n    if (errorCode) {\n      this.L = null;\n      this.c(\"error\", Error(getCastErrorMessage(errorCode)));\n      return;\n    }\n    this.L = src;\n  }\n  destroy() {\n    this.A();\n    this.Fg();\n  }\n  A() {\n    if (!this.Qa) {\n      this.ha = 0;\n      this.Ba = new TimeRange(0, 0);\n    }\n    this.ga.aa();\n    this.va = 0;\n    this.Qa = null;\n  }\n  zj() {\n    const resumeSessionEvent = new DOMEvent(\"resume-session\", { detail: this.session });\n    this.Bg(resumeSessionEvent);\n    const { muted, volume, savedState } = this.b.$state, localState = savedState();\n    this.setCurrentTime(Math.max(this.f.currentTime, localState?.currentTime ?? 0));\n    this.setMuted(muted());\n    this.setVolume(volume());\n    if (localState?.paused === false) this.play();\n  }\n  Fg() {\n    this.cast.endCurrentSession(true);\n    const { remotePlaybackLoader } = this.b.$state;\n    remotePlaybackLoader.set(null);\n  }\n  Bj() {\n    const { savedState } = this.b.$state;\n    savedState.set({\n      paused: this.f.isPaused,\n      currentTime: this.f.currentTime\n    });\n    this.Fg();\n  }\n  lc() {\n    this.Cj();\n  }\n  yj(event) {\n    this.zg[event.type].call(this, event);\n  }\n  Ag(data) {\n    const castState = this.cast.getCastState(), state = castState === cast.framework.CastState.CONNECTED ? \"connected\" : castState === cast.framework.CastState.CONNECTING ? \"connecting\" : \"disconnected\";\n    if (this.Aa === state) return;\n    const detail = { type: \"google-cast\", state }, trigger = this.bb(data);\n    this.Aa = state;\n    this.c(\"remote-playback-change\", detail, trigger);\n    if (state === \"disconnected\") {\n      this.Bj();\n    }\n  }\n  Bg(event) {\n    const hasLoaded = !!this.f.isMediaLoaded;\n    if (!hasLoaded) return;\n    const src = peek(this.b.$state.source);\n    Promise.resolve().then(() => {\n      if (src !== peek(this.b.$state.source) || !this.f.isMediaLoaded) return;\n      this.A();\n      const duration = this.f.duration;\n      this.Ba = new TimeRange(0, duration);\n      const detail = {\n        provider: this,\n        duration,\n        buffered: new TimeRange(0, 0),\n        seekable: this.Gg()\n      }, trigger = this.bb(event);\n      this.c(\"loaded-metadata\", void 0, trigger);\n      this.c(\"loaded-data\", void 0, trigger);\n      this.c(\"can-play\", detail, trigger);\n      this.Cg();\n      this.Dg(event);\n      const { volume, muted } = this.b.$state;\n      this.setVolume(volume());\n      this.setMuted(muted());\n      this.ga.Ya();\n      this.wa.sj(trigger);\n      this.wa.vg(trigger);\n    });\n  }\n  Cg() {\n    this.b.$state.canSetVolume.set(this.f.canControlVolume);\n  }\n  Dg(event) {\n    const trigger = this.bb(event);\n    this.c(\"stream-type-change\", this.Dj(), trigger);\n  }\n  Dj() {\n    const streamType = this.f.mediaInfo?.streamType;\n    return streamType === chrome.cast.media.StreamType.LIVE ? this.f.canSeek ? \"live:dvr\" : \"live\" : \"on-demand\";\n  }\n  Cj() {\n    if (this.Qa) return;\n    const currentTime = this.f.currentTime;\n    if (currentTime === this.va) return;\n    this.c(\"time-change\", currentTime);\n    if (currentTime > this.ha) {\n      this.ha = currentTime;\n      this.ob();\n    }\n    if (this.b.$state.seeking()) {\n      this.c(\"seeked\", currentTime);\n    }\n    this.va = currentTime;\n  }\n  ee(event) {\n    if (!this.f.isMediaLoaded || this.Qa) return;\n    const duration = this.f.duration, trigger = this.bb(event);\n    this.Ba = new TimeRange(0, duration);\n    this.c(\"duration-change\", duration, trigger);\n  }\n  Oa(event) {\n    if (!this.f.isMediaLoaded) return;\n    const detail = {\n      muted: this.f.isMuted,\n      volume: this.f.volumeLevel\n    }, trigger = this.bb(event);\n    this.c(\"volume-change\", detail, trigger);\n  }\n  wj(event) {\n    const trigger = this.bb(event);\n    if (this.f.isPaused) {\n      this.c(\"pause\", void 0, trigger);\n    } else {\n      this.c(\"play\", void 0, trigger);\n    }\n  }\n  ob(event) {\n    const detail = {\n      seekable: this.Gg(),\n      buffered: new TimeRange(0, this.ha)\n    }, trigger = event ? this.bb(event) : void 0;\n    this.c(\"progress\", detail, trigger);\n  }\n  xj(event) {\n    const state = this.f.playerState, PlayerState = chrome.cast.media.PlayerState;\n    this.Ce = state === PlayerState.IDLE;\n    if (state === PlayerState.PAUSED) return;\n    const trigger = this.bb(event);\n    switch (state) {\n      case PlayerState.PLAYING:\n        this.c(\"playing\", void 0, trigger);\n        break;\n      case PlayerState.BUFFERING:\n        this.c(\"waiting\", void 0, trigger);\n        break;\n      case PlayerState.IDLE:\n        this.ga.aa();\n        this.c(\"pause\");\n        this.c(\"end\");\n        break;\n    }\n  }\n  Gg() {\n    return this.f.liveSeekableRange ? new TimeRange(this.f.liveSeekableRange.start, this.f.liveSeekableRange.end) : this.Ba;\n  }\n  bb(detail) {\n    return detail instanceof Event ? detail : new DOMEvent(detail.type, { detail });\n  }\n  Ej(src) {\n    const { streamType, title, poster } = this.b.$state;\n    return new GoogleCastMediaInfoBuilder(src).pj(title(), poster()).mj(streamType()).nj(this.wa.od()).build();\n  }\n  Aj(src) {\n    const mediaInfo = this.Ej(src), request = new chrome.cast.media.LoadRequest(mediaInfo), savedState = this.b.$state.savedState();\n    request.autoplay = (this.Qa?.paused ?? savedState?.paused) === false;\n    request.currentTime = this.Qa?.time ?? savedState?.currentTime ?? 0;\n    return request;\n  }\n  async Eg(paused, time) {\n    const src = peek(this.b.$state.source);\n    this.Qa = { src, paused, time };\n    await this.loadSource(src);\n  }\n  Be() {\n    this.Eg(this.f.isPaused, this.f.currentTime).catch((error) => {\n    });\n  }\n}\n\nexport { GoogleCastProvider };\n"],"names":["GoogleCastMediaInfoBuilder","constructor","src","this","ab","chrome","cast","media","MediaInfo","type","build","mj","streamType","includes","StreamType","LIVE","BUFFERED","nj","tracks","map","oj","pj","title","poster","metadata","GenericMediaMetadata","images","url","track","trackId","castTrack","Track","TrackType","TEXT","name","label","trackContentId","trackContentType","language","subtype","kind","toUpperCase","REMOTE_TRACK_TEXT_TYPE","REMOTE_TRACK_AUDIO_TYPE","AUDIO","GoogleCastTracksManager","_cast","_ctx","_onNewLocalTracks","pd","b","Be","ie","syncRemoteActiveIds","vg","bind","listenEvent","audioTracks","textTracks","effect","qj","od","$state","filter","wg","yc","_this$pd$mediaInfo$tr","_this$pd$mediaInfo","mediaInfo","rj","activeIds","activeLocalAudioTrack","find","selected","activeLocalTextTracks","mode","remoteAudioTracks","remoteAudioTrack","Ae","push","length","remoteTextTracks","localTrack","remoteTextTrack","localTextTracks","isMediaLoaded","untrack","_this$Be","call","sj","event","localAudioTracks","_remoteAudioTrack$sub","xg","localAudioTrack","id","toString","ListSymbol","ea","localTextTrack","toLowerCase","add","editRequest","EditTracksInfoRequest","tj","catch","error","request","getCastSessionMedia","Promise","resolve","reject","editTracksInfo","localTracks","remoteTrack","yg","remoteTracks","GoogleCastProvider","_player","f","$$PROVIDER_TYPE","scope","createScope","L","Aa","va","ha","Ba","TimeRange","ga","RAFLoop","lc","Qa","Ce","wa","c","delegate","currentSrc","player","getCastContext","session","getCastSession","hasActiveSession","hasActiveCastSession","setup","uj","vj","listenCastContextEvent","framework","CastContextEventType","CAST_STATE_CHANGED","Ag","Event2","RemotePlayerEventType","handlers","IS_CONNECTED_CHANGED","IS_MEDIA_LOADED_CHANGED","Bg","CAN_CONTROL_VOLUME_CHANGED","Cg","CAN_SEEK_CHANGED","Dg","DURATION_CHANGED","ee","IS_MUTED_CHANGED","Oa","VOLUME_LEVEL_CHANGED","IS_PAUSED_CHANGED","wj","LIVE_SEEKABLE_RANGE_CHANGED","ob","PLAYER_STATE_CHANGED","xj","zg","handler","yj","keysOf","controller","addEventListener","onDispose","removeEventListener","play","_this$f$controller","isPaused","Eg","playOrPause","pause","_this$f$controller2","getMediaStatus","_this$media","getStatus","setMuted","muted","_this$f$controller3","isMuted","muteOrUnmute","setCurrentTime","time","_this$f$controller4","currentTime","seek","setVolume","volume","_this$f$controller5","volumeLevel","setVolumeLevel","loadSource","_this$Qa","zj","loadRequest","Aj","errorCode","loadMedia","Error","getCastErrorMessage","destroy","A","Fg","aa","_localState$currentTi","resumeSessionEvent","DOMEvent","detail","savedState","localState","Math","max","paused","endCurrentSession","remotePlaybackLoader","set","Bj","Cj","data","castState","getCastState","state","CastState","CONNECTED","CONNECTING","trigger","bb","peek","source","then","duration","provider","buffered","seekable","Gg","Ya","canSetVolume","canControlVolume","Dj","_this$f$mediaInfo","canSeek","seeking","playerState","PlayerState","IDLE","PAUSED","PLAYING","BUFFERING","liveSeekableRange","start","end","Event","Ej","_this$Qa$paused","_this$Qa2","_ref","_this$Qa$time","_this$Qa3","LoadRequest","autoplay"],"sourceRoot":""}